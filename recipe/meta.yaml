{% set name = "pySOT" %}
{% set version = "0.3.3" %}
{% set sha256 = "9214b7f47237dedf8b7004488c6fc1d8248ae304a4af596379e8f87d89a71f3d" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  # getting source from GitHub release instead of PyPI because it includes tests (and examples)
  url: https://github.com/dme65/{{ name }}/archive/v{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  noarch: python
  number: 0
  script:
    - {{ PYTHON }} -m pip install . --no-deps -vv

requirements:
  host:
    - pip
    - python
    # `numpy` is required to avoid the following error during `pip install`:
    # RuntimeError: Setuptools downloading is disabled in conda build. Be sure to add all dependencies in the meta.yaml
    - numpy
  run:
    - python
    - scipy
    - pydoe2
    - poap >=0.1.25
    - py_dempster_shafer
    - six
    - dill

test:
  requires:
    - pytest  # even though it is declared as a dependency in setup.py, it is used only by tests

  imports:
    - pySOT

  source_files:
    - tests

  commands:
    # test_controller.py was removed because it was failing with the message:
    #     Cannot create a file when that file already exists: 'temp_checkpoint.pysot' -> 'checkpoint.pysot'
    - pytest tests -k "not test_checkpoint_serial"

  requires:
    - scikit-learn

about:
  home: https://github.com/dme65/pySOT
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.rst
  summary: Surrogate Optimization Toolbox
  description: |
    pySOT is an asynchronous parallel optimization toolbox for global deterministic optimization problems. The main purpose of
    the toolbox is for optimization of computationally expensive black-box objective functions with continuous and/or integer
    variables where the number of evaluations is limited. If there are several processors available it may make sense to evaluate
    the objective function using either asynchronous or synchronous parallel. pySOT uses the event-driven framework for
    asynchronous optimization strategies POAP (https://github.com/dbindel/POAP) to provide this functionality.
  doc_url: http://http://pysot.readthedocs.io/
  dev_url: https://github.com/dme65/pySOT

extra:
  recipe-maintainers:
    - tadeu
    - jaimeambrus
